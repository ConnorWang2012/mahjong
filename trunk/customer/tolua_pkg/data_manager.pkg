$#include "data_manager.h"

$#include <unordered_map>

$#include "base/basic_manager.h"

namespace gamer
{

class DataManager : public BasicManager<DataManager>
{
public:
    //typedef google::protobuf::uint32                player_id_t;
    //typedef google::protobuf::uint32                card_t;

    static DataManager* getInstance();

    inline gamer::protocol::MyLoginMsgProtocol* my_login_msg_protocol();

    inline gamer::protocol::CreateRoomMsgProtocol* create_room_msg_protocol();

    inline gamer::protocol::RoomMsgProtocol* room_msg_protocol();

    inline gamer::protocol::PlayCardMsgProtocol* play_card_msg_protocol();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_player_self();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_left_player();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_opposite_player();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_right_player();

    inline unsigned int self_player_id() const;

    inline unsigned int left_player_id() const;

    inline unsigned int opposite_player_id() const;

    inline unsigned int right_player_id() const;

    void updateCardForDiscardOfPlayerSelf(unsigned int discard);

    void updateCardForChi(unsigned int player_id,
                          unsigned int card_of_chi,
                          unsigned int card_match_chi_1,
                          unsigned int card_match_chi_2);

    void updateCardForPeng(unsigned int player_id, unsigned int card_of_peng);

    void updateCardForPengAndGang(unsigned int player_id, unsigned int card_of_peng_gang);

    void updateCardForMingGang(unsigned int player_id, unsigned int card_of_ming_gang);

    void updateCardForAnGang(unsigned int player_id, unsigned int card_of_an_gang);

    void updateCardForBuhua(unsigned int player_id);
};

} // namespace gamer
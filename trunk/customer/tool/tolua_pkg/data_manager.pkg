$#include "data_manager.h"

$#include <unordered_map>

$#include "base/basic_manager.h"

namespace gamer
{

class DataManager : public BasicManager<DataManager>
{
public:
    static DataManager* getInstance();

    inline gamer::protocol::MyLoginMsgProtocol* my_login_msg_protocol();

    inline gamer::protocol::CreateRoomMsgProtocol* create_room_msg_protocol();

    inline gamer::protocol::RoomMsgProtocol* room_msg_protocol();

    inline gamer::protocol::PlayCardMsgProtocol* play_card_msg_protocol();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_player_self();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_left_player();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_opposite_player();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_right_player();

    inline const int self_player_id() const;

    inline const int left_player_id() const;

    inline const int opposite_player_id() const;

    inline const int right_player_id() const;

    void updateCardForDiscardOfPlayerSelf(int discard);

    void updateCardForChi(int player_id,
                          int card_of_chi,
                          int card_match_chi_1,
                          int card_match_chi_2);

    void updateCardForPeng(int player_id, int card_of_peng);

    void updateCardForPengAndGang(int player_id, int card_of_peng_gang);

    void updateCardForMingGang(int player_id, int card_of_ming_gang);

    void updateCardForAnGang(int player_id, int card_of_an_gang);

    void updateCardForBuhua(int player_id, int card_of_flower_season);
};

} // namespace gamer
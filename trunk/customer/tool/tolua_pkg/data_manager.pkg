$#include "data_manager.h"

$#include <unordered_map>

$#include "base/basic_manager.h"

namespace gamer
{

class DataManager : public BasicManager<DataManager>
{
public:
    static DataManager* getInstance();

    inline gamer::protocol::MyLoginMsgProtocol* my_login_msg_protocol();

    inline gamer::protocol::CreateRoomMsgProtocol* create_room_msg_protocol();

    inline gamer::protocol::RoomMsgProtocol* room_msg_protocol();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_player_self();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_left_player();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_opposite_player();

    inline gamer::protocol::PlayerCardsMsgProtocol* cards_msg_protocol_of_right_player();

    inline const int self_player_id() const;

    inline const int left_player_id() const;

    inline const int opposite_player_id() const;

    inline const int right_player_id() const;

    void updateCardForDiscard(int discard);

    void updateInvisibleHandCard(int new_card);
};

} // namespace gamer
--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create node_operation
local node_operation=cc.Node:create()
node_operation:setName("node_operation")

--Create img_operation_bg
local img_operation_bg = ccui.ImageView:create()
img_operation_bg:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("assets/room/plist/operation.plist")
img_operation_bg:loadTexture("operation_bg.png",1)
img_operation_bg:setScale9Enabled(true)
img_operation_bg:setCapInsets({x = 157, y = 53, width = 189, height = 55})
img_operation_bg:setLayoutComponentEnabled(true)
img_operation_bg:setName("img_operation_bg")
img_operation_bg:setTag(30)
img_operation_bg:setCascadeColorEnabled(true)
img_operation_bg:setCascadeOpacityEnabled(true)
img_operation_bg:setPosition(261.0000, -0.0001)
layout = ccui.LayoutComponent:bindLayoutComponent(img_operation_bg)
layout:setSize({width = 527.0000, height = 161.0000})
layout:setLeftMargin(-2.5000)
layout:setRightMargin(-524.5000)
layout:setTopMargin(-80.4999)
layout:setBottomMargin(-80.5001)
node_operation:addChild(img_operation_bg)

--Create img_operation1
local img_operation1 = ccui.ImageView:create()
img_operation1:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("assets/room/plist/operation.plist")
img_operation1:loadTexture("i_operation_ting.png",1)
img_operation1:setLayoutComponentEnabled(true)
img_operation1:setName("img_operation1")
img_operation1:setTag(31)
img_operation1:setCascadeColorEnabled(true)
img_operation1:setCascadeOpacityEnabled(true)
img_operation1:setAnchorPoint(0.3644, 0.4423)
img_operation1:setPosition(64.3000, 76.5117)
img_operation1:setScaleX(0.8000)
img_operation1:setScaleY(0.8000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_operation1)
layout:setPositionPercentX(0.1220)
layout:setPositionPercentY(0.4752)
layout:setPercentWidth(0.3264)
layout:setPercentHeight(1.0745)
layout:setSize({width = 172.0000, height = 173.0000})
layout:setLeftMargin(1.6312)
layout:setRightMargin(353.3688)
layout:setTopMargin(-11.9852)
layout:setBottomMargin(-0.0148)
img_operation_bg:addChild(img_operation1)

--Create img_mahjong_bg1
local img_mahjong_bg1 = ccui.ImageView:create()
img_mahjong_bg1:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("assets/room/plist/cards.plist")
img_mahjong_bg1:loadTexture("mj_my_invisible.png",1)
img_mahjong_bg1:setLayoutComponentEnabled(true)
img_mahjong_bg1:setName("img_mahjong_bg1")
img_mahjong_bg1:setTag(5)
img_mahjong_bg1:setCascadeColorEnabled(true)
img_mahjong_bg1:setCascadeOpacityEnabled(true)
img_mahjong_bg1:setPosition(216.8514, 77.9999)
img_mahjong_bg1:setScaleX(0.7000)
img_mahjong_bg1:setScaleY(0.7000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_mahjong_bg1)
layout:setPositionPercentX(0.4115)
layout:setPositionPercentY(0.4845)
layout:setPercentWidth(0.2732)
layout:setPercentHeight(1.2484)
layout:setSize({width = 144.0000, height = 201.0000})
layout:setLeftMargin(144.8514)
layout:setRightMargin(238.1486)
layout:setTopMargin(-17.4999)
layout:setBottomMargin(-22.5001)
img_operation_bg:addChild(img_mahjong_bg1)

--Create img_mahjong_bg2
local img_mahjong_bg2 = ccui.ImageView:create()
img_mahjong_bg2:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("assets/room/plist/cards.plist")
img_mahjong_bg2:loadTexture("mj_my_invisible.png",1)
img_mahjong_bg2:setLayoutComponentEnabled(true)
img_mahjong_bg2:setName("img_mahjong_bg2")
img_mahjong_bg2:setTag(13)
img_mahjong_bg2:setCascadeColorEnabled(true)
img_mahjong_bg2:setCascadeOpacityEnabled(true)
img_mahjong_bg2:setPosition(336.9254, 77.9998)
img_mahjong_bg2:setScaleX(0.7000)
img_mahjong_bg2:setScaleY(0.7000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_mahjong_bg2)
layout:setPositionPercentX(0.6393)
layout:setPositionPercentY(0.4845)
layout:setPercentWidth(0.2732)
layout:setPercentHeight(1.2484)
layout:setSize({width = 144.0000, height = 201.0000})
layout:setLeftMargin(264.9254)
layout:setRightMargin(118.0746)
layout:setTopMargin(-17.4998)
layout:setBottomMargin(-22.5002)
img_operation_bg:addChild(img_mahjong_bg2)

--Create img_mahjong_fg1
local img_mahjong_fg1 = ccui.ImageView:create()
img_mahjong_fg1:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("assets/room/plist/cards.plist")
img_mahjong_fg1:loadTexture("bamboo_7.png",1)
img_mahjong_fg1:setLayoutComponentEnabled(true)
img_mahjong_fg1:setName("img_mahjong_fg1")
img_mahjong_fg1:setTag(6)
img_mahjong_fg1:setCascadeColorEnabled(true)
img_mahjong_fg1:setCascadeOpacityEnabled(true)
img_mahjong_fg1:setPosition(215.0231, 65.9999)
img_mahjong_fg1:setScaleX(0.7000)
img_mahjong_fg1:setScaleY(0.7000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_mahjong_fg1)
layout:setPositionPercentX(0.4080)
layout:setPositionPercentY(0.4099)
layout:setPercentWidth(0.1935)
layout:setPercentHeight(0.7702)
layout:setSize({width = 102.0000, height = 124.0000})
layout:setLeftMargin(164.0231)
layout:setRightMargin(260.9769)
layout:setTopMargin(33.0001)
layout:setBottomMargin(3.9999)
img_operation_bg:addChild(img_mahjong_fg1)

--Create img_mahjong_fg2
local img_mahjong_fg2 = ccui.ImageView:create()
img_mahjong_fg2:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("assets/room/plist/cards.plist")
img_mahjong_fg2:loadTexture("bamboo_8.png",1)
img_mahjong_fg2:setLayoutComponentEnabled(true)
img_mahjong_fg2:setName("img_mahjong_fg2")
img_mahjong_fg2:setTag(15)
img_mahjong_fg2:setCascadeColorEnabled(true)
img_mahjong_fg2:setCascadeOpacityEnabled(true)
img_mahjong_fg2:setPosition(335.9244, 65.9996)
img_mahjong_fg2:setScaleX(0.7000)
img_mahjong_fg2:setScaleY(0.7000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_mahjong_fg2)
layout:setPositionPercentX(0.6374)
layout:setPositionPercentY(0.4099)
layout:setPercentWidth(0.1935)
layout:setPercentHeight(0.7702)
layout:setSize({width = 102.0000, height = 124.0000})
layout:setLeftMargin(284.9244)
layout:setRightMargin(140.0756)
layout:setTopMargin(33.0004)
layout:setBottomMargin(3.9996)
img_operation_bg:addChild(img_mahjong_fg2)

--Create img_operation2
local img_operation2 = ccui.ImageView:create()
img_operation2:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("assets/room/plist/operation.plist")
img_operation2:loadTexture("i_operation_guo.png",1)
img_operation2:setLayoutComponentEnabled(true)
img_operation2:setName("img_operation2")
img_operation2:setTag(32)
img_operation2:setCascadeColorEnabled(true)
img_operation2:setCascadeOpacityEnabled(true)
img_operation2:setPosition(464.5472, 80.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_operation2)
layout:setPositionPercentX(0.8815)
layout:setPositionPercentY(0.4969)
layout:setPercentWidth(0.2182)
layout:setPercentHeight(0.7205)
layout:setSize({width = 115.0000, height = 116.0000})
layout:setLeftMargin(407.0472)
layout:setRightMargin(4.9528)
layout:setTopMargin(23.0000)
layout:setBottomMargin(22.0000)
img_operation_bg:addChild(img_operation2)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(15)
result['animation']:setTimeSpeed(0.5000)

--Create PositionTimeline
local PositionTimeline = ccs.Timeline:create()

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(261.0000)
localFrame:setY(-0.0001)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(15)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(-266.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

result['animation']:addTimeline(PositionTimeline)
PositionTimeline:setNode(img_operation_bg)

--Create ScaleTimeline
local ScaleTimeline = ccs.Timeline:create()

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(15)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

result['animation']:addTimeline(ScaleTimeline)
ScaleTimeline:setNode(img_operation_bg)

--Create RotationSkewTimeline
local RotationSkewTimeline = ccs.Timeline:create()

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(15)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

result['animation']:addTimeline(RotationSkewTimeline)
RotationSkewTimeline:setNode(img_operation_bg)
--Create Animation List

result['root'] = node_operation
return result;
end

return Result

